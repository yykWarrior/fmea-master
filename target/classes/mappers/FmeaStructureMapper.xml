<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rb.fmea.dao.FmeaStructureMapper" >
  <resultMap id="BaseResultMap" type="com.rb.fmea.entities.FmeaStructure" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="structure_name" property="structureName" jdbcType="VARCHAR" />
    <result column="structure_desc" property="structureDesc" jdbcType="VARCHAR" />
    <result column="superior_id" property="superiorId" jdbcType="INTEGER" />
    <result column="fmea_id" property="fmeaId" jdbcType="INTEGER" />
  </resultMap>


    <resultMap id="BaseResultMap1" type="com.rb.fmea.dto.FmeaStructureDto" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="structure_name" property="structureName" jdbcType="VARCHAR" />
        <result column="structure_desc" property="structureDesc" jdbcType="VARCHAR" />
        <result column="fmea_id" property="fmeaId" jdbcType="INTEGER" />
    </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from fmea_structure
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rb.fmea.entities.FmeaStructure" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ROWID()
    </selectKey>
    insert into fmea_structure (structure_name, structure_desc, superior_id, 
      fmea_id)
    values (#{structureName,jdbcType=VARCHAR}, #{structureDesc,jdbcType=VARCHAR}, #{superiorId,jdbcType=INTEGER}, 
      #{fmeaId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.rb.fmea.entities.FmeaStructure" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fmea_structure
    set structure_name = #{structureName,jdbcType=VARCHAR},
      structure_desc = #{structureDesc,jdbcType=VARCHAR},
      superior_id = #{superiorId,jdbcType=INTEGER},
      fmea_id = #{fmeaId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, structure_name, structure_desc, superior_id, fmea_id
    from fmea_structure
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, structure_name, structure_desc, superior_id, fmea_id
    from fmea_structure
  </select>


    <!--根据上一级id查询-->
    <select id="selectBySuperiorId" resultMap="BaseResultMap" >
        select id, structure_name, structure_desc, superior_id, fmea_id
        from fmea_structure where id=#{assemblyId}
    </select>



    <!--根据上一级id和fmeaId查询-->
    <select id="selectBySuperiorIdAndFmeaId" resultMap="BaseResultMap1" >
        select id, structure_name, structure_desc, superior_id, fmea_id
        from fmea_structure where superior_id=#{parentId} and fmea_id=#{fmeaId}
    </select>



    <!--根据id修改结构名称和结构描述-->
    <update id="updateStructureById" parameterType="com.rb.fmea.entities.FmeaStructure" >
        update fmea_structure
        set structure_name = #{structureName,jdbcType=VARCHAR},
        structure_desc = #{structureDesc,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!--根据id删除结构下有子集同时删除-->
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from fmea_structure
        where id in (with recursive
    cao as (
        select * from fmea_structure f2 where id=#{id,jdbcType=INTEGER}
        union all
        select fmea_structure.* from cao  join fmea_structure  on cao.id = fmea_structure.superior_id
    )
        select id from cao)
    </delete>


    <!--根据失效id查询对应的结构信息-->
    <select id="selectByFailAnalysisId" resultMap="BaseResultMap" >
        select id, structure_name, structure_desc, superior_id, fmea_id
        from fmea_structure where id=(select fmea_structure_id from fmea_function where id=(select function_id from fmea_fail_analysis where id=#{failAnalysisId}))
    </select>


    <!--根据措施id查询对应的结构信息-->
    <select id="selectByMeasureId" resultMap="BaseResultMap" >
       select id, structure_name, structure_desc, superior_id, fmea_id
        from fmea_structure where id=(select fmea_structure_id from fmea_function where id=(
        select function_id from fmea_fail_analysis where id=(
        select fmea_fail_analysis_id from fmea_measures where id=#{measureId})))
    </select>

    <!--根据fmeaId查询总成信息-->
    <select id="selectSecondTree" resultMap="BaseResultMap" >
        select id, structure_name, structure_desc, superior_id, fmea_id
        from fmea_structure where superior_id=(select id from fmea_structure where superior_id=0 and fmea_id=#{fmeaId})
    </select>


    <!--关联查询出fmea不存在的结构-->
    <select id="selectAllFmeaIdIsNull" resultMap="BaseResultMap">
        select fs.id, structure_name, structure_desc, fs.superior_id, fmea_id
        from fmea_structure fs left  join fmea f on fs.fmea_id=f.id where f.id is null
    </select>
</mapper>
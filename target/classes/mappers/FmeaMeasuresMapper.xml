<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rb.fmea.dao.FmeaMeasuresMapper">
    <resultMap id="BaseResultMap" type="com.rb.fmea.entities.FmeaMeasures">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="fmea_measures_standard" property="fmeaMeasuresStandard" jdbcType="VARCHAR"/>
        <result column="fmea_measures_desc" property="fmeaMeasuresDesc" jdbcType="VARCHAR"/>
        <result column="frequency_degree" property="frequencyDegree" jdbcType="FLOAT"/>
        <result column="fmea_measures_category" property="fmeaMeasuresCategory" jdbcType="INTEGER"/>
        <result column="optimize_measures" property="optimizeMeasures" jdbcType="INTEGER"/>
        <result column="fmea_fail_analysis_id" property="fmeaFailAnalysisId" jdbcType="INTEGER"/>
        <result column="charge_name" property="chargeName" jdbcType="VARCHAR"/>
        <result column="finsh_date" property="finshDate" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="take_measures" property="takeMeasures" jdbcType="VARCHAR"/>
        <result column="finsh_time" property="finshTime" jdbcType="VARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from fmea_measures
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.rb.fmea.entities.FmeaMeasures">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ROWID()
        </selectKey>
        insert into fmea_measures (fmea_measures_standard, fmea_measures_desc,
        frequency_degree, fmea_measures_category, optimize_measures,
        fmea_fail_analysis_id, charge_name, finsh_date,
        `state`, take_measures, finsh_time
        )
        values (#{fmeaMeasuresStandard,jdbcType=VARCHAR}, #{fmeaMeasuresDesc,jdbcType=VARCHAR},
        #{frequencyDegree,jdbcType=FLOAT}, #{fmeaMeasuresCategory,jdbcType=INTEGER},
        #{optimizeMeasures,jdbcType=INTEGER},
        #{fmeaFailAnalysisId,jdbcType=INTEGER}, #{chargeName,jdbcType=VARCHAR}, #{finshDate,jdbcType=VARCHAR},
        #{state,jdbcType=INTEGER}, #{takeMeasures,jdbcType=VARCHAR}, #{finshTime,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.rb.fmea.entities.FmeaMeasures">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update fmea_measures
        set fmea_measures_standard = #{fmeaMeasuresStandard,jdbcType=VARCHAR},
        fmea_measures_desc = #{fmeaMeasuresDesc,jdbcType=VARCHAR},
        frequency_degree = #{frequencyDegree,jdbcType=FLOAT},
        fmea_measures_category = #{fmeaMeasuresCategory,jdbcType=INTEGER},
        optimize_measures = #{optimizeMeasures,jdbcType=INTEGER},
        fmea_fail_analysis_id = #{fmeaFailAnalysisId,jdbcType=INTEGER},
        charge_name = #{chargeName,jdbcType=VARCHAR},
        finsh_date = #{finshDate,jdbcType=VARCHAR},
        `state` = #{state,jdbcType=INTEGER},
        take_measures = #{takeMeasures,jdbcType=VARCHAR},
        finsh_time = #{finshTime,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, fmea_measures_standard, fmea_measures_desc, frequency_degree, fmea_measures_category,
        optimize_measures, fmea_fail_analysis_id, charge_name, finsh_date, `state`, take_measures,
        finsh_time
        from fmea_measures
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, fmea_measures_standard, fmea_measures_desc, frequency_degree, fmea_measures_category,
        optimize_measures, fmea_fail_analysis_id, charge_name, finsh_date, `state`, take_measures,
        finsh_time
        from fmea_measures
    </select>


    <!--
        根据是否优化，和措施类别查询
    -->
    <select id="selectFmeaMeasuresCategoryAndOptimizeMeasures" resultMap="BaseResultMap">
        select id, fmea_measures_standard, fmea_measures_desc, frequency_degree, fmea_measures_category,
        optimize_measures, fmea_fail_analysis_id, charge_name, finsh_date, `state`, take_measures,
        finsh_time
        from fmea_measures where fmea_measures_category=#{fmeaMeasuresCategory} and optimize_measures=#{optimizeMeasures}
    </select>


    <!--
    根据结构id查询对应下的所有措施
    -->
    <select id="selectByStructureId" resultMap="BaseResultMap">
        select id, fmea_measures_standard, fmea_measures_desc, frequency_degree, fmea_measures_category,
        optimize_measures, fmea_fail_analysis_id, charge_name, finsh_date, `state`, take_measures,
        finsh_time
        from fmea_measures where fmea_measures_category=#{state} and fmea_fail_analysis_id in (select id from fmea_fail_analysis where function_id in (select id from fmea_function where fmea_structure_id=#{structureId}) limit #{page} offest #{limit}
    </select>


    <!--查询总条数-->
    <select id="count" resultType="java.lang.Integer">
        select count(id)
        from fmea_measures where fmea_measures_category=#{state} and fmea_fail_analysis_id in (select id from fmea_fail_analysis where function_id in (select id from fmea_function where fmea_structure_id=#{structureId})
    </select>


    <!--一个产品下的优化措施监控-->
    <select id="selectOptMeasureOneProduct" resultType="com.rb.fmea.dto.OptMeasureDto">
    select fmeaName,customer,assfembly,part,feature,function,failAnalysis,id,
       (case when fmeaMeasureCategory=0 then '预防措施'
           when fmeaMeasureCategory=1 then '探测措施'
           else '' end
           )as fmeaMeasureCategory,
       fmeaMeasuresDesc,
       (case when fmeaMeasureCategory=0 then frequencyDegree
             when fmeaMeasureCategory=1 then 0.0
             else 0.0 end
           )as
       frequencyDegree,
       (case when fmeaMeasureCategory=0 then 0.0
             when fmeaMeasureCategory=1 then detectionDegree
             else 0.0 end
           )as
       detectionDegree,chargeName,finshDate,
       (case when state=0 then '开放'
             when state=1 then '完成'
             when state=2 then '不执行'
             else '' end
           )as
        state,takeMeasures,finshTime
    from (
    select m.fmea_name fmeaName,m.structure_name customer, fs1.structure_name assfembly,fs2.structure_name part,fs3.structure_name feature,ff.function_standard function,ffa.analysis_standard failAnalysis,
       fm.id,fm.fmea_measures_category fmeaMeasureCategory,fm.fmea_measures_desc fmeaMeasuresDesc,fm.frequency_degree frequencyDegree,fm.frequency_degree detectionDegree,fm.charge_name chargeName
        ,fm.finsh_date finshDate,fm.state state,fm.take_measures takeMeasures,fm.finsh_time finshTime
    from (
    select f.fmea_name,fs.structure_name,fs.id from fmea f left outer join fmea_structure fs on f.id = fs.fmea_id where f.product_id=#{productId}
    and fs.superior_id=0 ) m left join fmea_structure fs1 on m.id=fs1.superior_id left join fmea_structure fs2 on fs1.id=fs2.superior_id
    left join fmea_structure fs3 on fs2.id=fs3.superior_id left join fmea_function ff on fs3.id = ff.fmea_structure_id left join fmea_fail_analysis ffa
    on ff.id=ffa.function_id left join fmea_measures fm on ffa.id=fm.fmea_fail_analysis_id where fm.optimize_measures=1)  limit #{limit} offset #{page}
    </select>

    <!--一个产品下优化措施总条数-->
    <select id="countOneProduct" resultType="java.lang.Integer">
         select count(fm.id)
         from (select f.fmea_name,fs.structure_name,fs.id from fmea f left outer join fmea_structure fs on f.id = fs.fmea_id where f.product_id=#{productId}
                                                                                                                                  and fs.superior_id=0 ) m left join fmea_structure fs1 on m.id=fs1.superior_id left join fmea_structure fs2 on fs1.id=fs2.superior_id
                                                                                                                                                           left join fmea_structure fs3 on fs2.id=fs3.superior_id left join fmea_function ff on fs3.id = ff.fmea_structure_id left join fmea_fail_analysis ffa
                                                                                                                                                                                                                                                                                        on ff.id=ffa.function_id left join fmea_measures fm on ffa.id=fm.fmea_fail_analysis_id where fm.optimize_measures=1
    </select>

    <!--修改不执行状态-->
    <update id="updateState" >
        update fmea_measures
        set
        `state` = 2
        where id = #{measureId,jdbcType=INTEGER}
    </update>


    <!--根据产品和状态查询-->
    <select id="selectByProductIdAndState" resultMap="BaseResultMap">
    select fm.*
    from (
    select f.fmea_name,fs.structure_name,fs.id from fmea f left outer join fmea_structure fs on f.id = fs.fmea_id where f.product_id=#{productId}
    and fs.superior_id=0 ) m left join fmea_structure fs1 on m.id=fs1.superior_id left join fmea_structure fs2 on fs1.id=fs2.superior_id
    left join fmea_structure fs3 on fs2.id=fs3.superior_id left join fmea_function ff on fs3.id = ff.fmea_structure_id left join fmea_fail_analysis ffa
    on ff.id=ffa.function_id left join fmea_measures fm on ffa.id=fm.fmea_fail_analysis_id where fm.optimize_measures=1 and fm.state=#{state}
    </select>


</mapper>
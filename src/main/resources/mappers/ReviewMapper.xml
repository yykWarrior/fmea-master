<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rb.fmea.dao.ReviewMapper">
  <resultMap id="BaseResultMap" type="com.rb.fmea.entities.Review">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="review_require" jdbcType="VARCHAR" property="reviewRequire" />
    <result column="special_require" jdbcType="VARCHAR" property="specialRequire" />
    <result column="finsh_date" jdbcType="VARCHAR" property="finshDate" />
    <result column="fmea_id" jdbcType="INTEGER" property="fmeaId" />
    <result column="responsible" jdbcType="VARCHAR" property="responsible" />
    <result column="step" jdbcType="INTEGER" property="step" />
    <result column="review_result" jdbcType="VARCHAR" property="reviewResult" />
    <result column="review_date" jdbcType="VARCHAR" property="reviewDate" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="review_state" jdbcType="INTEGER" property="reviewState" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rb.fmea.entities.Review">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into review (review_require, special_require, finsh_date, 
      fmea_id, responsible, step, 
      review_result, review_date, create_date, 
      `state`, review_state)
    values (#{reviewRequire,jdbcType=VARCHAR}, #{specialRequire,jdbcType=VARCHAR}, #{finshDate,jdbcType=VARCHAR}, 
      #{fmeaId,jdbcType=INTEGER}, #{responsible,jdbcType=VARCHAR}, #{step,jdbcType=INTEGER}, 
      #{reviewResult,jdbcType=VARCHAR}, #{reviewDate,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{reviewState,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.rb.fmea.entities.Review">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update review
    set review_require = #{reviewRequire,jdbcType=VARCHAR},
      special_require = #{specialRequire,jdbcType=VARCHAR},
      finsh_date = #{finshDate,jdbcType=VARCHAR},
      fmea_id = #{fmeaId,jdbcType=INTEGER},
      responsible = #{responsible,jdbcType=VARCHAR},
      step = #{step,jdbcType=INTEGER},
      review_result = #{reviewResult,jdbcType=VARCHAR},
      review_date = #{reviewDate,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      review_state = #{reviewState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, review_require, special_require, finsh_date, fmea_id, responsible, step, 
    review_result, review_date, create_date, `state`, review_state
    from review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, review_require, special_require, finsh_date, fmea_id, responsible, step, 
    review_result, review_date, create_date, `state`, review_state
    from review
  </select>


    <!--根据fmeaId和结构查询-->
    <select id="selectByFmeaIdAndStep" resultMap="BaseResultMap">
        select id, review_require, special_require, finsh_date, fmea_id, responsible, step,
        review_result, review_date, create_date, `state`, review_state
        from review where fmea_id=#{fmeaId} and step=#{structId}
    </select>

    <!--根据状态查询-->
    <select id="selectByReviewState" resultMap="BaseResultMap">
        select id, review_require, special_require, finsh_date, fmea_id, responsible, step,
        review_result, review_date, create_date, `state`, review_state
        from review where state=#{state}
    </select>

    <!--根据状态和fmeaId查询-->
    <select id="selectByFmeaIdAndState" resultMap="BaseResultMap">
        select id, review_require, special_require, finsh_date, fmea_id, responsible, step,
        review_result, review_date, create_date, `state`, review_state
        from review where state=#{state} and fmea_id=#{id}
    </select>


    <!--根据状态和step查询-->
    <select id="selectByStepAndStateAndFmeaId" resultMap="BaseResultMap">
        select id, review_require, special_require, finsh_date, fmea_id, responsible, step,
        review_result, review_date, create_date, `state`, review_state
        from review
        <where>
            <if test="list!=null and list.size>0">
                and step in
                <foreach item="id" collection="list" separator="," open="(" close=")" index="">
                    #{id}
                </foreach>
            </if>
            and state=#{state} and fmea_id=#{fmeaId}
        </where>

    </select>

</mapper>